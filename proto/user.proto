syntax = "proto3";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";

package user;

service UserController {
    rpc AddUser (AddUserRequest) returns (AddUserResponse){}
    rpc Login (LoginRequest) returns (google.protobuf.Empty){}
    rpc VerifyTheNumber (VerfiyCodeRequest) returns (VerifyCodeResponse) {}
    rpc AddPassword (AddPasswordRequest) returns (google.protobuf.Empty){}
    rpc ForgetPassword (ForgetPassRequest) returns (ForgetPassResponse){}
    rpc ChangePassword (ChangePass) returns (ChangePassResponse){}
    rpc LogoutUser (LogoutRequest) returns (LogoutResponse){}
    rpc RefreshTokens (RefreshTokensRequest) returns (RefreshTokensResponse){}
    rpc GetUserById (GetUserByIdRequest) returns (GetUserByIdResponse){}
    rpc GetUserByMsisdn (GetUserByMsisdnRequest) returns (GetUserByMsisdnResponse){}
    rpc AssignRole (AssignRoleRequest) returns (google.protobuf.Empty){}
    rpc GetRoles (GetRolesRequest) returns (GetRolesResponse){}
    rpc UpdateStatus(UpdateStatusRequest) returns (UpdateStatusResponse){}
    rpc LoginWithPassword(LoginWithPassRequest) returns (LoginWithPassResponse){}
    rpc Register(RegisterRequest) returns (RegisterResponse){}
}

message CurrentUser {
    int32 userId = 1;
    string msisdn = 2;
    string role = 3;
    int64 iat = 4;
    int64 exp = 5;
}
message UserDetailsDto {
    string firstName = 1;
    string lastName = 2;
    optional string middleName = 3;
    optional string email = 4;
    optional string password = 5;
    optional string msisdn = 6;
    optional string status = 7;
    optional string language = 8;
}

message Tokens {
    string accessToken = 1;
    string refreshToken = 2;
}

message UserReturn {
    int32 id = 1;
    string firstName = 2;
    string lastName = 3;
    optional string middleName = 4;
    optional string email = 5;
    optional string msisdn = 6;
    optional string status = 7;
    optional string language = 8;
    optional string role = 9;
    optional google.protobuf.Timestamp lastLogin = 10;
    optional google.protobuf.Timestamp createdAt = 11;
    optional google.protobuf.Timestamp updatedAt = 12;
    optional google.protobuf.Timestamp deletedAt = 13;
}

message AssignRole {
    int32 userId = 1;
    int32 roleId = 2;
}

message Roles {
    int32 id = 1;
    string name = 2;
}

message UpdateStatus {
    int32 userId = 1;
    string status = 2;
}

message Register {
    string firstName = 1;
    string lastName = 2;
    string middleName = 3;
    string email = 4;
    string password = 5;
    string msisdn = 6;
    optional string status = 7;
    optional string language = 8;
}

message LoginRequest {
    string msisdn = 1;
    optional string ipAddress = 2;
    optional string reason = 3;
}

message VerfiyCodeRequest {
    string msisdn = 1;
    string code = 2;
}

message VerifyCodeResponse {
    Tokens tokens = 1;
}

message AddUserRequest {
    CurrentUser userId = 1;
    UserDetailsDto user = 2;
}
message AddUserResponse {
   UserReturn user = 1;
   Tokens tokens = 2;
}

message ForgetPassRequest {
    string msisdn = 1;
}
message ForgetPassResponse {

}

message PasswordDto {
    string password = 1;
    string repassword = 2;
}
message ChangePass {
    string msisdn = 1;
    string code = 2;
    PasswordDto password = 3;
}
message ChangePassResponse {

}

message LogoutRequest {
    CurrentUser user = 1;
}
message LogoutResponse {
    string logout = 1;
}

message AddPasswordRequest {
    CurrentUser user = 1;
    PasswordDto password = 2;
}

message RefreshTokensRequest {
    CurrentUser user = 1;
    string refreshToken = 2;
}
message RefreshTokensResponse {
    Tokens tokens = 1;
}

message GetUserByIdRequest {
    int32 userId = 1;
}

message GetUserByIdResponse {
    UserReturn user = 1;
}

message GetUserByMsisdnRequest {
    string msisdn = 1;
}

message GetUserByMsisdnResponse {
    UserReturn user = 1;
}

message AssignRoleRequest {
  AssignRole role = 1;
}

message GetRolesRequest {}

message GetRolesResponse {
  repeated Roles roles = 1;
}

message UpdateStatusRequest {
    UpdateStatus user = 1;
}

message UpdateStatusResponse {
    UpdateStatus user = 1;
}

message LoginWithPassRequest {
    string login = 1;
    string password = 2;
}

message LoginWithPassResponse {
   Tokens tokens = 1;
}

message RegisterRequest {
    Register user = 1;
}

message RegisterResponse {
    UserDetailsDto user = 1;
    Tokens tokens = 2;
}

// address service
service AddressController {
    rpc GetAll (GetAllAddressRequest) returns (GetAllAddressResponse){}
    rpc Create (AddressRequest) returns (CreateAddressResponse){}
    rpc Update (AddressRequest) returns (UpdateAddressResponse){}
    rpc Delete (AddressDeleteRequest) returns (DeleteAddressResponse){}
}

message GetAllAddressRequest {
    int32 userId = 1;
}

message AddressDeleteRequest {
    int32 userId = 1;
    int32 id = 2;
}

message AddressRequest {
    int32 userId = 1;
    string address = 2;
    int32 regionId = 3;
    int32 districtId = 4;
    optional string postalCode = 5;
    optional string comment = 6;
    optional bool default = 7;
    optional int32 id = 8;
}

message AddressResponse {
    string address = 1;
    int32 regionId = 2;
    int32 districtId = 3;
    optional string postalCode = 4;
    optional string comment = 5;
    optional bool default = 6;
    optional string createdAt = 7;
    optional string updatedAt = 8;
    int32 id = 9;
}

message CreateAddressResponse {
    AddressResponse result = 1;
    repeated string errors = 2;
}

message UpdateAddressResponse {
    AddressResponse result = 1;
    repeated string errors = 2;
}

message DeleteAddressResponse {
    bool status = 1;
    repeated string errors = 2;
}

message GetAllAddressResponse {
    repeated AddressResponse result = 1;
    repeated string errors = 2;
}
